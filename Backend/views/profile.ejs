<% include header.ejs%>
<script src="http://vkontakte.ru/js/api/openapi.js" type="text/javascript"></script>

<div class="modal-body hide">
    <div id="logToApp">
            <fb:login-button scope="public_profile,email" onlogin="checkLoginState();">
            </fb:login-button>
    </div>
    <div id="vk_login_button" onclick="VK.Auth.login(authInfo, VK.access.EMAIL);">Войти ВКонтакте</div>
    <script>


        /**
         * FAcebook script
         * */

        // This is called with the results from from FB.getLoginStatus().
        function statusChangeCallback(response) {
            console.log('statusChangeCallback');
            console.log(response);
            // The response object is returned with a status field that lets the
            // app know the current login status of the person.
            // Full docs on the response object can be found in the documentation
            // for FB.getLoginStatus().
            if (response.status === 'connected') {
                // Logged into your app and Facebook.
                console.log("WE are connected");
                testAPI();
            } else if (response.status === 'not_authorized') {
                // The person is logged into Facebook, but not your app.
                document.getElementById('status').innerHTML = 'Please log ' +
                        'into this app.';
            } else {
                // The person is not logged into Facebook, so we're not sure if
                // they are logged into this app or not.
                document.getElementById('status').innerHTML = 'Please log ' +
                        'into Facebook.';
            }
        }
        // This function is called when someone finishes with the Login
        // Button.  See the onlogin handler attached to it in the sample
        // code below.
        function checkLoginState() {
            FB.getLoginStatus(function (response) {
                statusChangeCallback(response);
            });
        }
        window.fbAsyncInit = function () {
            FB.init({
                appId: '547022722158282',
                cookie: true,  // enable cookies to allow the server to access
                               // the session
                xfbml: true,  // parse social plugins on this page
                version: 'v2.8' // use graph api version 2.8
            });
            // Now that we've initialized the JavaScript SDK, we call
            // FB.getLoginStatus().  This function gets the state of the
            // person visiting this page and can return one of three states to
            // the callback you provide.  They can be:
            //
            // 1. Logged into your app ('connected')
            // 2. Logged into Facebook, but not your app ('not_authorized')
            // 3. Not logged into Facebook and can't tell if they are logged into
            //    your app or not.
            //
            // These three cases are handled in the callback function.
            /**
             *    comment getLoginStatus to login very time you are on page
             * */

             /* FB.getLoginStatus(function (response) {
             statusChangeCallback(response);
             });*/


            /* FB.Event.subscribe('auth.login', function(resp) {
             window.location = 'http://localhost:6163/profile.html';
             });*/
        };
        // Load the SDK asynchronously
        (function (d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) return;
            js = d.createElement(s);
            js.id = id;
            js.src = "//connect.facebook.net/en_US/sdk.js";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));
        // Here we run a very simple test of the Graph API after login is
        // successful.  See statusChangeCallback() for when this call is made.
        function testAPI() {
            console.log('Welcome!  Fetching your information.... ');
            FB.api('/me?fields=id,name,email,gender,permissions', function (response) {
                if(response && !response.error) {

                    console.log('Successful login for: ' + response.name);
                    document.getElementById('profile_name').innerHTML=response.name;
                    document.getElementById('status').innerHTML =
                            'Thanks for logging in, ' + response.name+", email = "+ response.email+", gender = "+response.gender+",id= https://www.facebook.com/"+response.id;
                    console.log('Successful login for: ' + response.id);
                    console.log('Successful login for: ' + response.email);
                    document.getElementById("profile_image").setAttribute("src", "http://graph.facebook.com/" + response.id + "/picture?type=normal");

                }
            });
        }

        var im ;
        VK.init({
            apiId: 5768708
        });

        function authInfo(response) {
            if (response.session) {
                //alert('user: '+response.session.mid);
                getInitData();
            }
        }

        function getInitData() {
            var code;
            code = 'return {'
            code += 'me: API.getProfiles({uids: API.getVariable({key: 1280}),  fields: "sex,photo"})[0]';
            code += '};';
            VK.Api.call('execute', { 'code': code }, onGetInitData);
        }
        function onGetInitData(data) {
            var r;
            if (data.response) {
                r = data.response;
                if (r.me) {
                    document.getElementById('profile_image').src = r.me.photo;
                    var gender;
                    if(r.me.sex == 0){
                        gender="undefined"
                    }else if(r.me.sex == 1){
                        gender = "female";
                    }else gender = "male";
                    document.getElementById('profile_name').innerHTML=r.me.first_name + ' ' + r.me.last_name;
                    document.getElementById('name').innerHTML = "Name = "+r.me.first_name + ' ' + r.me.last_name + ", id = "+r.me.uid+" gender "+gender;
                    console.log(r.me.first_name + ' ' + r.me.last_name + '<br><a href="http://vkontakte.ru/id' + r.me.uid + '">  ' + r.me.photo + "  " + r.me.gender);

                }
            }
        }
        // VK.Auth.getLoginStatus(authInfo);
        VK.UI.button('vk_login_button');
    </script>
</div>

<span class="glyphicon glyphicon-log-in" onclick="function authorize() {
        $('.modal-body').removeClass('hide');
        console.log('done')
    }
    authorize()"></span>
<a href=""> </a>


</head>
<body>


<!-- Trigger/Open The Modal -->
<button id="addLotBtn">Add lot</button>

<!-- The Modal -->
<div id="myModal" class="modal">

    <!-- Modal content -->
    <div class="modal-content">
        <div class="modal-header">
            <span class="close">&times;</span>
            <h2>Add lot</h2>
        </div>
        <div class="modal-body">
            <ul>
                <li><label for="name">Photo (URL only):</label> <input type="text" name="photoUrl" id="photoUrl" value="" /></li><br>
                <li><label for="email">Description: </label> <textarea rows="4" name="desc" id="desc" cols="50"></textarea></li><br>
                <li><label for="gender">Gender</label>
                    <select id="gender">
                        <option value="male">Male</option>
                        <option value="female">Female</option>
                    </select>
                </li><br>
                <li><label for="pwd">Link:</label> <a href="#">Link on lot</a></li><br>
            </ul>
        </div>
        <div class="modal-footer">
            <button id="btn-submit-lot" onclick="addToDB()">Add lot</button>
        </div>
    </div>

</div>

<script src="dbFunction.js"></script>


<button onclick="addToDB()">asd</button>

<div id="status"></div>


<p id="name"></p>
<img src="" style="display: block" id="image">

<div class="container">
    <div class="profile-name">
    </div>
    <div class="row">
    <div class="left-col col-lg-3 col-md-3  col-sm-3">

        <div id="profile_photo_name">
        <div class="col-lg-8">
            <img src="" id="profile_image">
        </div>
        <div class="col-lg-4">
            <h3 id="profile_name"></h3>
        </div>
        </div>

    </div>
    <div class="right-col col-lg-8 col-md-8 col-sm-8"></div>
    </div>
</div>
<% include footer.ejs%>